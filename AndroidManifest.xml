<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.activity"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="19" />
    
    <!-- 访问网络 -->
    <uses-permission android:name="android.permission.INTERNET" />
    
    <!-- 操作SD卡 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    
    <!-- 弹出一个系统级别的对话框 -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    
    <!-- 拨打电话的功能 -->
    <uses-permission android:name="android.permission.CALL_PHONE" /> 
    
    <!-- 允许蓝牙权限 -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" /> <!-- 此句不加，在onDestroy()函数中用mBluetoothAdapter.disable();会报错  -->
	
	<!-- 查询系统的网络状态 -->
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
	
	<!-- 控制手机振动 -->
	<uses-permission android:name="android.permission.VIBRATE" />
	
	<!-- 读取系统联系人 -->
	<uses-permission android:name="android.permission.READ_CONTACTS" />
	
	<!-- 发送短信 ,接收短信-->
	<uses-permission android:name="android.permission.SEND_SMS" />
	<uses-permission android:name="android.permission.RECEIVE_SMS" />
	
    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity 
            android:name="com.example.activity.LoginActivity">
           <intent-filter>
               <action android:name="android.intent.action.MAIN"/>
               <category android:name="android.intent.category.LAUNCHER"/>
           </intent-filter>  
        </activity>
        
        
        <activity 
            android:name=".FirstActivity">
        </activity>
        
        
        <activity 
            android:name=".VisitAssetsActivity">
        </activity>
        
        
         <activity 
            android:name=".ProviderActivity">
        </activity>
        
         
          <activity 
            android:name=".AddBookActivity">
        </activity>
        
          
           <activity 
            android:name=".QueryBookActivity">
        </activity>
        
         
         <activity 
            android:name=".MessageActivity">
           <intent-filter>
               <action android:name="com.example.activitytest.ACTION_START"/>
               <category android:name="android.intent.category.DEFAULT"/>
               <category android:name="com.example.activitytest.MSG"/>
           </intent-filter>
        </activity>
           
        
        <activity android:name="com.example.activity.SecondActivity"
            	  android:label="这是第二个界面">
           
           <!-- android.intent.category.DEFAULT 是一种默认的 category，但是在配置文件中不能省略；
           		在调用startActivity()方法的时候会自动将这个 category添加到 Intent中。 -->
             <intent-filter>
               <action android:name="com.example.activitytest.ACTION_START"/>
               <category android:name="android.intent.category.DEFAULT"/>
               <category android:name="com.example.activitytest.MY"/>
           </intent-filter>  
        </activity>
        
        
        <activity android:name="com.example.activity.ThirdActivity"
            	  android:label="这是第三个界面"
            	  android:launchMode="singleTop">
             
            <!-- 当 前 活 动 能 够 响 应 的 action 是Intent.ACTION_DIAL 的常量值 。
            	只有<data>标签中指定的内容和 Intent 中携带的 Data 完全一致时，
            	 当前活动才能够响应该 Intent。-->
            <intent-filter>
               <action android:name="android.intent.action.VIEW"/>
               <category android:name="android.intent.category.DEFAULT"/>
               <data android:scheme="http" />
           </intent-filter>  
        </activity>
        
        
        <!-- 静态注册广播 -->
        <receiver android:name="com.example.receiver.ForceOfflineReceiver"><!-- 指定具体注册哪一个广播接收器 -->
             <intent-filter>
            	 <action android:name="com.example.receiver.FORCE_OFFLINE"/><!-- 想要接收的广播 -->
             </intent-filter> 
        </receiver>
        
        <!-- 内容提供者 -->
         <provider
            android:name="com.example.provider.MyContentProvider"
            android:authorities="com.example.contactstest.provider">            
         </provider>
         
    </application>

</manifest>
